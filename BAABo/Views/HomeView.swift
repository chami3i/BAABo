//
//  HomeView.swift
//  BAABo
//
//  Created by Wren on 8/5/25.
//

import SwiftUI

struct HomeView: View {
    @State private var selectedTab: Int = 1
    @State private var didLike: Bool? = nil
    // ÌÄòÏä§Ìä∏ ÏÉÅÌÉú Ï†ÄÏû• (ÌöçÎìù Ïó¨Î∂Ä)
    @State private var collected: [Bool] = Array(repeating: false, count: 9)
    
    let nickname = "ÌôçÍ∏∏Îèô"
    let place = "Ïò§Î™®Ïò§Î™® Ïã†ÏÑ∏Í≥ÑÏ†ê"
    
    // Í∑∏Î¶¨Îìú Î†àÏù¥ÏïÑÏõÉ (4Ïó¥)
    let columns = Array(repeating: GridItem(.flexible(), spacing: 16), count: 4)
    
    // ÌÄòÏä§Ìä∏ ÏÑ§Î™Ö Î™©Î°ù
    private let quests = [
        "Ïï± Ï≤´ Ï†ëÏÜç",
        "Ï≤´ Ï∂îÏ≤ú ÏãùÎãπ Î∞õÍ∏∞",
        "ÏãùÎãπ Î¶¨Î∑∞ ÎÇ®Í∏∞Í∏∞",
        "Î∞© ÎßåÎì§Í∏∞",
        "ÎûúÎç§ ÏãùÎãπ ÏÑ†ÌÉù",
        "ÏπúÍµ¨ÏôÄ ÏùòÍ≤¨ ÏùºÏπòÌïòÍ∏∞",
        "Î∞©Ïû• ÎêòÍ∏∞",
        "Ï¶êÍ≤®Ï∞æÍ∏∞ Ï∂îÍ∞Ä",
        "ÎûúÎç§ Ï∂îÏ≤ú 10Î≤à Îã¨ÏÑ±",
    ]
    
    let people: [Person] = [
        Person(name: "Ï±î", imageName: nil),
        Person(name: "Ï†úÏù∏", imageName: nil),
        Person(name: "Ï†§Î¶¨", imageName: nil),
        Person(name: "Ïò•Îèå", imageName: nil),
        Person(name: "Î†å", imageName: nil),
    ]
    
    // ÌîÑÎ°úÌïÑ Î∞∞Í≤Ω ÏÉâÏÉÅ
    let gradientColors: [[Color]] = [
        [Color.red, Color.orange],
        [Color.blue, Color.purple],
        [Color.green, Color.yellow],
        [Color.pink, Color.teal],
        [Color.indigo, Color.mint]
    ]
    
    var randomGradient: [Color] {
        gradientColors.randomElement() ?? [Color.gray, Color.gray]
    }
    
    let menuItems: [TodayMenuItem] = [
        TodayMenuItem(name: "ÎπÑÎπîÎ∞•", category: "ÌïúÏãù", emoji: "üçö", description: "Îã§ÏñëÌïú Ïû¨Î£åÍ∞Ä Ìïú Í∑∏Î¶áÏóê Ïèô! ÎßõÍ≥º Í±¥Í∞ïÏùÑ Î™®Îëê Îã¥ÏùÄ ÎπÑÎπîÎ∞•!"),
        TodayMenuItem(name: "ÎùºÎ©ò", category: "ÏùºÏãù", emoji: "üçú", description: "Îî∞ÎúªÌïòÍ≥† ÍπäÏùÄ Íµ≠Î¨ºÏùò ÏùºÎ≥∏Ïãù ÎùºÎ©ò Ïñ¥ÎïåÏöî~?"),
        TodayMenuItem(name: "ÌååÏä§ÌÉÄ", category: "ÏñëÏãù", emoji: "üçù", description: "ÏûÖÏïà Í∞ÄÎìù ÌçºÏßÄÎäî ÌÅ¨Î¶ºÍ≥º ÌÜ†ÎßàÌÜ†Ïùò Ï°∞Ìôî, Ïò§ÎäòÏùÄ ÌååÏä§ÌÉÄÎ°ú Í∏∞Î∂Ñ Ï†ÑÌôò"),
        TodayMenuItem(name: "Îñ°Î≥∂Ïù¥", category: "Î∂ÑÏãù", emoji: "üå∂Ô∏è", description: "Ï´ÑÍπÉÌïú Îñ°Í≥º Îß§ÏΩ§Îã¨ÏΩ§ ÏÜåÏä§Ïùò ÏôÑÎ≤ΩÌïú Ï°∞Ìôî! Ïò§ÎäòÏùÄ Îñ°Î≥∂Ïù¥Î°ú Ïä§Ìä∏Î†àÏä§ ÌÉàÏ∂ú!"),
        TodayMenuItem(name: "ÍπÄÏπòÏ∞åÍ∞ú", category: "ÌïúÏãù", emoji: "ü•ò", description: "ÌïúÍµ≠Ïù∏Ïùò ÏÜåÏö∏Ìë∏Îìú, ÏßëÎ∞• Í∞ôÏùÄ Ï†ïÍ≤®Ïö¥ ÍπÄÏπòÏ∞åÍ∞ú Ìïú Í∑∏Î¶á Ïñ¥Îñ†ÏÑ∏Ïöî?"),
        TodayMenuItem(name: "ÏÉêÎü¨Îìú", category: "ÏñëÏãù", emoji: "ü•ó", description: "ÏπºÎ°úÎ¶¨ Í±±Ï†ï ÏóÜÏù¥ Îì†Îì†ÌïòÍ≤å, Ïã†ÏÑ†Ìï® Í∞ÄÎìùÌïú ÏÉêÎü¨Îìú Ìïú Í∑∏Î¶á")
    ]
    
    func getTodayMenu() -> TodayMenuItem {
        return menuItems.randomElement()!
    }
    
    @State private var isNavigating = false
    
    var body: some View {
        
        let todayMenu = getTodayMenu()
        
        NavigationStack {
            ScrollView(.vertical, showsIndicators: true) {
                VStack(spacing: 16) {
                    ZStack {
                        Rectangle()
                            .fill(Color.orange)
                            .frame(height: 130)
                            .cornerRadius(16)
                        
                        HStack {
                            Text("ÏãùÎãπ Ï†ïÌïòÎü¨\nÎñ†ÎÇòÏûê!")
                                .foregroundColor(.white)
                                .font(.title)
                                .bold()
                                .multilineTextAlignment(.leading)
                            
                            Spacer()
                            
                            Button(action: {
                                isNavigating = true
                            }) {
                                HStack(spacing: 6) {
                                    Text("Î∞© ÎßåÎì§Í∏∞")
                                        .font(.body)
                                    Image(systemName: "chevron.right")
                                }
                                .foregroundColor(.black)
                                .padding(.vertical, 10)
                                .padding(.horizontal, 16)
                                .background(Color.white)
                                .cornerRadius(20)
                            }
                            
                            
                        }
                        .padding(.horizontal, 30)
                    }
                    
                    Spacer()
                    
                    
                    // ü•ò Ïò§ÎäòÏùò Î©îÎâ¥ Ï∂îÏ≤ú
                    VStack(alignment: .leading, spacing: 8) {
                        Text("Ïò§ÎäòÏùò Î©îÎâ¥ Ï∂îÏ≤ú")
                            .font(.headline)
                            .foregroundColor(.black)
                        
                        Spacer()
                        
                        RoundedRectangle(cornerRadius: 12)
                            .fill(Color.gray.opacity(0.1))
                            .frame(height: 120)
                            .overlay(
                                HStack(spacing: 16) {
                                    
                                    // ÏùåÏãù Ïù¥Î™®ÏßÄ
                                    Text(todayMenu.emoji)
                                        .font(.system(size: 48))
                                    
                                    VStack(alignment: .leading, spacing: 6) {
                                        // Î©îÎâ¥ Ïù¥Î¶Ñ
                                        Text(todayMenu.name)
                                            .font(.title3)
                                            .fontWeight(.semibold)
                                            .foregroundColor(.black)
                                        
                                        // Í∞ÑÎã®Ìïú ÏÑ§Î™Ö
                                        Text(todayMenu.description)
                                            .font(.subheadline)
                                            .foregroundColor(.gray)
                                            .lineLimit(2)
                                    }
                                }
                                    .padding(.horizontal, 20)
                            )
                    }
                    
                    Spacer()
                    
                    // üéØ Ï±åÎ¶∞ÏßÄ
                    VStack(alignment: .leading, spacing: 8) {
                        Text("Ï±åÎ¶∞ÏßÄ")
                            .font(.headline)
                            .foregroundColor(.black)
                        
                        Spacer()
                        
                        LazyVGrid(columns: Array(repeating: GridItem(.flexible(), spacing: 10), count: 3), spacing: 10) {
                            ForEach(0..<quests.count, id: \.self) { index in
                                VStack(spacing: 8) {
                                    Button(action: {
                                        collected[index].toggle()
                                    }) {
                                        ZStack {
                                            Circle()
                                                .fill(collected[index] ? Color.orange : Color.gray.opacity(0.1))
                                                .frame(width: 100, height: 100)
                                                .shadow(radius: collected[index] ? 4 : 0)
                                            
                                            if collected[index] {
                                                Image(systemName: "star.fill")
                                                    .foregroundColor(.white)
                                                    .font(.title)
                                            }
                                        }
                                    }
                                    
                                    // ÌÄòÏä§Ìä∏ ÌÖçÏä§Ìä∏
                                    Text(quests[index])
                                        .font(.caption)
                                        .multilineTextAlignment(.center)
                                        .frame(width: 80, height: 34)
                                }
                            }
                        }
                    }
                    
                    Spacer()
                    
                    // üìù ÏµúÍ∑º Î∞©Î¨∏ ÏãùÎãπ Î¶¨Î∑∞
                    VStack(alignment: .leading, spacing: 8) {
                        Text("\(nickname)Îãò, ÏµúÍ∑ºÏóê Î∞©Î¨∏ÌïòÏã†\n\(place) Ïñ¥Îñ†ÏÖ®Ïñ¥Ïöî?")
                            .font(.headline)
                            .foregroundColor(.black)
                        
                        Spacer()
                        
                        HStack(spacing: 30) {
                            // üëç Ï¢ãÏïòÎã§ Î≤ÑÌäº
                            Button(action: {
                                didLike = true
                            }) {
                                HStack {
                                    Text("üëç")
                                }
                                .padding()
                                .frame(maxWidth: .infinity)
                                .background(didLike == true ? Color.green.opacity(0.2) : Color.gray.opacity(0.1))
                                .cornerRadius(12)
                                .overlay(
                                    RoundedRectangle(cornerRadius: 12)
                                        .stroke(didLike == true ? Color.green : Color.clear, lineWidth: 1)
                                )
                            }
                            
                            // üëé Ïã´ÏóàÎã§ Î≤ÑÌäº
                            Button(action: {
                                didLike = false
                            }) {
                                HStack {
                                    Text("üëé")
                                }
                                .padding()
                                .frame(maxWidth: .infinity)
                                .background(didLike == false ? Color.red.opacity(0.2) : Color.gray.opacity(0.1))
                                .cornerRadius(12)
                                .overlay(
                                    RoundedRectangle(cornerRadius: 12)
                                        .stroke(didLike == false ? Color.red : Color.clear, lineWidth: 1)
                                )
                            }
                        }
                    }
                    
                    Spacer()
                    
                    // üìå ÏµúÍ∑ºÏóê Í≤∞Ï†ïÌïú ÏãùÎãπ
                    VStack(alignment: .leading, spacing: 8) {
                        Text("ÏµúÍ∑ºÏóê Í≤∞Ï†ïÌïú ÏãùÎãπ")
                            .font(.headline)
                            .foregroundColor(.black)
                        
                        Spacer()
                        
                        VStack(alignment: .leading, spacing: 16) {
                            RoundedRectangle(cornerRadius: 12)
                                .fill(Color.white)
                                .frame(height: 60)
                                .shadow(radius: 3)
                                .overlay(
                                    VStack(alignment: .leading, spacing: 4) {
                                        Text("Î≤ÑÍ±∞ÌÇπ Ìè¨Ìï≠Í≥µÎåÄÏ†ê")
                                            .font(.headline)
                                            .foregroundColor(.black)
                                        
                                        Text("Í≤ΩÎ∂Å Ìè¨Ìï≠Ïãú ÎÇ®Íµ¨ Ï≤≠ÏïîÎ°ú 77 ¬∑ 11:00 - 20:00")
                                            .font(.caption)
                                            .foregroundColor(.gray)
                                    }
                                        .padding(.horizontal, 16)
                                        .padding(.vertical, 8),
                                    alignment: .leading
                                )
                            
                            RoundedRectangle(cornerRadius: 12)
                                .fill(Color.white)
                                .frame(height: 60)
                                .shadow(radius: 3)
                                .overlay(
                                    VStack(alignment: .leading, spacing: 4) {
                                        Text("ÌÉêÏÜ• Ìö®ÏûêÏ†ê")
                                            .font(.headline)
                                            .foregroundColor(.black)
                                        
                                        Text("Í≤ΩÎ∂Å Ìè¨Ìï≠Ïãú ÎÇ®Íµ¨ Ìö®ÏûêÎèôÍ∏∏5Î≤àÍ∏∏ 17 ¬∑ 11:00 - 21:00")
                                            .font(.caption)
                                            .foregroundColor(.gray)
                                    }
                                        .padding(.horizontal, 16)
                                        .padding(.vertical, 8),
                                    alignment: .leading
                                )
                            
                            RoundedRectangle(cornerRadius: 12)
                                .fill(Color.white)
                                .frame(height: 60)
                                .shadow(radius: 3)
                                .overlay(
                                    VStack(alignment: .leading, spacing: 4) {
                                        Text("ÏàòÍ∞ÄÏÑ±")
                                            .font(.headline)
                                            .foregroundColor(.black)
                                        
                                        Text("Í≤ΩÎ∂Å Ìè¨Ìï≠Ïãú Î∂ÅÍµ¨ ÏÉÅÎåÄÎ°ú 31 ¬∑ 00:00 - 24:00")
                                            .font(.caption)
                                            .foregroundColor(.gray)
                                    }
                                        .padding(.horizontal, 16)
                                        .padding(.vertical, 8),
                                    alignment: .leading
                                )
                        }
                    }
                    
                    Spacer()
                    
                    // üìå ÏµúÍ∑ºÏóê Ìï®ÍªòÌïú ÏÇ¨ÎûåÎì§
                    VStack(alignment: .leading, spacing: 8) {
                        Text("ÏµúÍ∑ºÏóê Ìï®ÍªòÌïú ÏÇ¨ÎûåÎì§")
                            .font(.headline)
                            .foregroundColor(.black)
                        
                        Spacer()
                        
                        LazyVGrid(columns: Array(repeating: GridItem(.flexible(), spacing: 10), count: 4), spacing: 10) {
                            ForEach(people, id: \.name) { person in
                                VStack(spacing: 8) {
                                    if let imageName = person.imageName, !imageName.isEmpty {
                                        // ‚úÖ Ïù¥ÎØ∏ÏßÄÍ∞Ä ÏûàÎäî Í≤ΩÏö∞
                                        Image(imageName)
                                            .resizable()
                                            .scaledToFill()
                                            .frame(width: 80, height: 80)
                                            .clipShape(Circle())
                                    } else {
                                        // ‚úÖ Ïù¥ÎØ∏ÏßÄÍ∞Ä ÏóÜÎäî Í≤ΩÏö∞: Í∑∏ÎùºÎç∞Ïù¥ÏÖò + Ïù¥ÎãàÏÖú
                                        ZStack {
                                            Circle()
                                                .fill(
                                                    LinearGradient(
                                                        gradient: Gradient(colors: randomGradient),
                                                        startPoint: .topLeading,
                                                        endPoint: .bottomTrailing
                                                    )
                                                )
                                                .frame(width: 70, height: 70)
                                            
                                            // Ïù¥Î¶ÑÏùò Ï≤´ Í∏ÄÏûê ÎòêÎäî ÏïÑÏù¥ÏΩò
                                            Text(String(person.name.prefix(1)))
                                                .font(.headline)
                                                .foregroundColor(.white)
                                        }
                                    }
                                    
                                    Text(person.name)
                                        .font(.caption)
                                        .lineLimit(1)
                                }
                            }
                        }
                    }
                    
                    Spacer().frame(height: 100)
                    
                }
                .padding(.horizontal, 30)
                .padding(.top, 10)
                .navigationDestination(isPresented: $isNavigating) {
                    MapView()
                }
            }
        }
    }
}

struct Person {
    let name: String
    let imageName: String?
}

struct TodayMenuItem {
    let name: String
    let category: String
    let emoji: String
    let description: String
}

#Preview {
    HomeView()
}
